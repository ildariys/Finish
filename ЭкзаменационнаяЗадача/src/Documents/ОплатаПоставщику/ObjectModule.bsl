
Процедура ОбработкаПроведения(Отказ, Режим)
	//{{__КОНСТРУКТОР_ДВИЖЕНИЙ_РЕГИСТРОВ
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!

	// регистр Взаиморасчеты Приход
	Движения.Взаиморасчеты.Записывать = Истина;
	Для Каждого ТекСтрокаСписокПоступившихКниг Из СписокКниг Цикл
		Движение = Движения.Взаиморасчеты.Добавить();
		Движение.ВидДвижения = ВидДвиженияНакопления.Приход;
		Движение.Период = Дата;
		Движение.Контрагент = Контрагент;
		Движение.Долг = Сумма;
	КонецЦикла;

	// регистр ДенежныеСредстваСети Расход
	Движения.ДенежныеСредстваСети.Записывать = Истина;
	Для Каждого ТекСтрокаСписокПоступившихКниг Из СписокКниг Цикл
		Движение = Движения.ДенежныеСредстваСети.Добавить();
		Движение.ВидДвижения = ВидДвиженияНакопления.Расход;
		Движение.Период = Дата;
		Движение.Магазин = Склад;
		Движение.ДенежныеСредства = Сумма;
	КонецЦикла;

	//}}__КОНСТРУКТОР_ДВИЖЕНИЙ_РЕГИСТРОВ
КонецПроцедуры

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	//{{__КОНСТРУКТОР_ВВОД_НА_ОСНОВАНИИ
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
	Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ПоступлениеКниг") Тогда
		// Заполнение шапки
		Валюта = ДанныеЗаполнения.Валюта;
		Контрагент = ДанныеЗаполнения.Поставщик;
		Склад = ДанныеЗаполнения.Склад;
		Сумма = ДанныеЗаполнения.Сумма;
		ТекущийКурс = ДанныеЗаполнения.ТекущийКурс;
		Для Каждого ТекСтрокаСписокКниг Из ДанныеЗаполнения.СписокКниг Цикл
			НоваяСтрока = СписокКниг.Добавить();
			НоваяСтрока.Количество = ТекСтрокаСписокКниг.Количество;
			НоваяСтрока.Книга = ТекСтрокаСписокКниг.НазваниеКниги;
			НоваяСтрока.Сумма = ТекСтрокаСписокКниг.Сумма;
			НоваяСтрока.ЦенаПоставщика = ТекСтрокаСписокКниг.ЦенаПоставщика;
		КонецЦикла;
	КонецЕсли;
	//}}__КОНСТРУКТОР_ВВОД_НА_ОСНОВАНИИ
КонецПроцедуры
// @strict-types


#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОписаниеПеременных

#КонецОбласти

#Область ПрограммныйИнтерфейс

// Код процедур и функций

#КонецОбласти

#Область ОбработчикиСобытий

// Код процедур и функций

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

// Код процедур и функций

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Код процедур и функций

#КонецОбласти

#Область Инициализация

#КонецОбласти

#КонецЕсли
