// @strict-types


#Область ОписаниеПеременных

#КонецОбласти

#Область ОбработчикиСобытийФормы

// Код процедур и функций


&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Ключ.Пустая() Тогда

		Объект.Ответственный = ПолучениеДанныхТекущегоСеансаСервер.ВернутьЗначениеПараметраСеансаТекущийПользователь();
		Объект.Склад = ПолучениеДанныхТекущегоСеансаСервер.ВернутьЗначениеПараметраСеансаТекущийМагазин();
		Объект.ТекущийКурс = 1;
		Объект.Валюта = Справочники.Валюты.РоссийскийРубль;
		
	КонецЕсли;
	
	УстановитьДоступныйОстатокСредст();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ВалютаПриИзменении(Элемент)
	ТекущаяВалюта = Объект.Валюта;
	Объект.ТекущийКурс = ОбщегоНазначенияСервер.ПолучениеТекущегоКурсаВалюты(ТекущаяВалюта);
	
	Если Объект.ТекущийКурс = Неопределено 
		Или Объект.ТекущийКурс = 0 Тогда
		
		Сообщить("Задайте курс валюты");
		ПараметрыФормы = Новый Структура;
		ПараметрыФормы.Вставить("Ключ", Объект.Валюта);
		ОткрытьФорму("Справочник.Валюты.Форма.ФормаЭлемента_Управляемая", ПараметрыФормы);
		Возврат;
		
	КонецЕсли;
	 
КонецПроцедуры

#КонецОбласти


#Область ОбработчикиСобытийЭлементовТаблицыФормыСписокКниг

&НаКлиенте
Процедура СписокКнигКнигаПриИзменении(Элемент)
	Элементы.СписокКниг.ТекущиеДанные.Количество = 1;
КонецПроцедуры
#КонецОбласти


#Область ОбработчикиСобытийЭлементовТаблицыФормыСписокПоступившихКниг



#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыДокументыПоступления

&НаКлиенте
Процедура ДокументыПоступленияДокументПриИзменении(Элемент)
	
	ДокументСсылка = Элементы.ДокументыПоступления.ТекущиеДанные.Документ;
	СуммаДокумента = ОбщегоНазначенияСервер.СуммаДокументаПоступления(ДокументСсылка);
	Если СуммаДокумента = Неопределено Тогда
	
		Сообщить("Не удалось получить сумму документа, проверьте документ!");
		Возврат;
		
	КонецЕсли;
	
	Элементы.ДокументыПоступления.ТекущиеДанные.Сумма = СуммаДокумента;
	
КонецПроцедуры

#КонецОбласти
#Область ОбработчикиКомандФормы

// Код процедур и функций


&НаКлиенте
Процедура ДобавитьДокументыПрихода(Команда)
	
	Оп = Новый ОписаниеОповещения("ОбработкаВыбора", ЭтотОбъект);
	ОткрытьФорму("Документ.ПоступлениеКниг.Форма.ФормаВыбораНеОплаченныхДокументов",,,,,,Оп);

КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора) Экспорт 
	
	СтруктураПоиска = Новый Структура;
	СтруктураПоиска.Вставить("Документ", ВыбранноеЗначение.Ссылка);
	КоличествоСовпадений = Объект.ДокументыПоступления.НайтиСтроки(СтруктураПоиска);
	
	Если КоличествоСовпадений.Количество() <> 0 Тогда
		
		Сообщить("Такие данные уже вводились!");
		Возврат;
		
	КонецЕсли;
	
	НоваяСтрока = Объект.ДокументыПоступления.Добавить();
	НоваяСтрока.Документ = ВыбранноеЗначение.Ссылка;
	НоваяСтрока.Сумма = ВыбранноеЗначение.Сумма;
	РасчитатьИтог();
	
КонецПроцедуры
#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура УстановитьДоступныйОстатокСредст()
	Если Объект.Дата = НачалоДня(Объект.Дата) Тогда
	
		Дата = ТекущаяДата();
		
	Иначе
		
		Дата =Объект.Дата;
	
	КонецЕсли;
	ДоступноСредствДляОплаты = ОбщегоНазначенияСервер.ПолучитьОстатокСредстМагазина(Дата, Объект.Склад);
КонецПроцедуры

&НаКлиенте
Процедура МагазинПриИзменении(Элемент)
	УстановитьДоступныйОстатокСредст();
КонецПроцедуры

&НаКлиенте
Процедура ДокументыПоступленияПриИзменении(Элемент)
	РасчитатьИтог();
КонецПроцедуры

Процедура РасчитатьИтог()

	Объект.Сумма = Объект.ДокументыПоступления.Итог("Сумма");

КонецПроцедуры

&НаКлиенте
Процедура ДатаПриИзменении(Элемент)
	УстановитьДоступныйОстатокСредст();
КонецПроцедуры


#КонецОбласти
