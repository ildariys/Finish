
Процедура ОбработкаПроведения(Отказ, Режим)
	//{{__КОНСТРУКТОР_ДВИЖЕНИЙ_РЕГИСТРОВ
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!

	// регистр ОстаткиНомеклатуры Расход
	Движения.ОстаткиНомеклатуры.Записывать = Истина;
	Для Каждого ТекСтрокаСписокКниг Из СписокКниг Цикл
		Движение = Движения.ОстаткиНомеклатуры.Добавить();
		Движение.ВидДвижения = ВидДвиженияНакопления.Расход;
		Движение.Период = Дата;
		Движение.Склад = Склад;
		Движение.Книга = ТекСтрокаСписокКниг.НазваниеКниги;
		Движение.Количество = ТекСтрокаСписокКниг.Количество;
	КонецЦикла;

	// регистр Выручка 
	Движения.Выручка.Записывать = Истина;
	Для Каждого ТекСтрокаСписокКниг Из СписокКниг Цикл
		Движение = Движения.Выручка.Добавить();
		Движение.Период = Дата;
		Движение.Магазин = Склад;
		Движение.Оператор = Оператор;
		Движение.Сумма = Сумма;
	КонецЦикла;

	// регистр ДенежныеСредстваСети Приход
	Движения.ДенежныеСредстваСети.Записывать = Истина;
	Движение = Движения.ДенежныеСредстваСети.Добавить();
	Движение.ВидДвижения = ВидДвиженияНакопления.Приход;
	Движение.Период = Дата;
	Движение.Магазин = Склад;
	Движение.ДенежныеСредства = Сумма;
	
	//}}__КОНСТРУКТОР_ДВИЖЕНИЙ_РЕГИСТРОВ
КонецПроцедуры
// @strict-types


#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОписаниеПеременных

#КонецОбласти

#Область ПрограммныйИнтерфейс

// Код процедур и функций

#КонецОбласти

#Область ОбработчикиСобытий

// Код процедур и функций

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

// Код процедур и функций

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Код процедур и функций

#КонецОбласти

#Область Инициализация

#КонецОбласти

#КонецЕсли
