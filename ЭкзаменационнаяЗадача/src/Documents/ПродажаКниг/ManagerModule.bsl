#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Выполнить бронирование.
// 
// Параметры:
//  ДокументСсылка Документ ссылка
Процедура ВыполнитьБронирование(ДокументСсылка) Экспорт

	Если Не ДоступностьБрони(ДокументСсылка) Тогда

		Возврат;
	КонецЕсли;

	НаборЗаписей = РегистрыНакопления.БронированиеТоваров.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Регистратор.Установить(ДокументСсылка);

	Для Каждого ТекСтрокаТовары Из ДокументСсылка.СписокКниг Цикл

		Движение = НаборЗаписей.Добавить();
		Движение.ВидДвижения = ВидДвиженияНакопления.Приход;
		Движение.Период = ДокументСсылка.Дата;
		Движение.Книга = ТекСтрокаТовары.Книга;
		Движение.Склад = ДокументСсылка.Склад;
		Движение.КоличествоЗабронированного = ТекСтрокаТовары.Количество;
	КонецЦикла;

	НаборЗаписей.Записать();
	Сообщить("Бронирование выполнено успешно!");

КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ДоступностьБрони(Ссылка)

	Забронировать = Истина;

	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ПродажаКнигСписокКниг.Книга КАК Книга,
	|	СУММА(ПродажаКнигСписокКниг.Количество) КАК Количество1
	|ПОМЕСТИТЬ ВТ_ТоварыДокумента
	|ИЗ
	|	Документ.ПродажаКниг.СписокКниг КАК ПродажаКнигСписокКниг
	|ГДЕ
	|	ПродажаКнигСписокКниг.Ссылка = &Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	ПродажаКнигСписокКниг.Книга
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОстаткиНомеклатурыОстатки.КоличествоОстаток КАК КоличествоОстаток,
	|	ОстаткиНомеклатурыОстатки.Книга КАК Книга1
	|ПОМЕСТИТЬ ВТ_Остатки
	|ИЗ
	|	РегистрНакопления.ОстаткиНоменклатуры.Остатки(
	|			&Период,
	|			(Склад, Книга) В
	|				(ВЫБРАТЬ
	|					&Склад,
	|					ВТ_ТоварыДокумента.Книга КАК Книга
	|				ИЗ
	|					ВТ_ТоварыДокумента КАК ВТ_ТоварыДокумента)) КАК ОстаткиНомеклатурыОстатки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	БронированиеТоваровОстатки.Книга КАК Книга,
	|	БронированиеТоваровОстатки.КоличествоЗабронированногоОстаток КАК КоличествоЗабронированногоОстаток
	|ПОМЕСТИТЬ ВТ_Бронь
	|ИЗ
	|	РегистрНакопления.БронированиеТоваров.Остатки(
	|			&Период,
	|			(Склад, Книга) В
	|				(ВЫБРАТЬ
	|					&Склад,
	|					ВТ_ТоварыДокумента.Книга КАК Книга
	|				ИЗ
	|					ВТ_ТоварыДокумента КАК ВТ_ТоварыДокумента)) КАК БронированиеТоваровОстатки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ТоварыДокумента.Книга КАК Книга,
	|	ВТ_ТоварыДокумента.Количество1 КАК КоличествоДокумент,
	|	ЕСТЬNULL(ВТ_Остатки.КоличествоОстаток, 0) КАК КоличествоОстаток,
	|	ПРЕДСТАВЛЕНИЕССЫЛКИ(ВТ_ТоварыДокумента.Книга) КАК КнигаПредставление,
	|	ЕСТЬNULL(ВТ_Бронь.КоличествоЗабронированногоОстаток, 0) КАК КоличествоЗабронированного
	|ИЗ
	|	ВТ_ТоварыДокумента КАК ВТ_ТоварыДокумента
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Остатки КАК ВТ_Остатки
	|		ПО ВТ_ТоварыДокумента.Книга = ВТ_Остатки.Книга1
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Бронь КАК ВТ_Бронь
	|		ПО ВТ_ТоварыДокумента.Книга = ВТ_Бронь.Книга";

	Запрос.УстановитьПараметр("Период", Ссылка.Дата);
	Запрос.УстановитьПараметр("Склад", Ссылка.Склад);
	Запрос.УстановитьПараметр("Ссылка", Ссылка);

	РезультатЗапроса = Запрос.Выполнить();

	Выборка = РезультатЗапроса.Выбрать();
	
	// Проверка остатков
	Пока Выборка.Следующий() Цикл
		КоличествоОстатка = Выборка.КоличествоОстаток - Выборка.КоличествоЗабронированного;
		Если Выборка.КоличествоДокумент > КоличествоОстатка Тогда

			Забронировать = Ложь;
			Дефицит = Выборка.КоличествоДокумент - КоличествоОстатка;
			Сообщение = Новый СообщениеПользователю;
			Сообщение.Текст = "Недостаточно товара " + Выборка.КнигаПредставление + " в количестве " + Дефицит + " шт";
			Сообщение.Сообщить();
		КонецЕсли;
	КонецЦикла;

	Возврат Забронировать;

КонецФункции

#КонецОбласти

#КонецЕсли