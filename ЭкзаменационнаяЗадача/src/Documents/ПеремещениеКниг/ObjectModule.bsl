#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ОбработкаПроведения(Отказ, Режим)
	
	НоменклатурыХватает = Истина;
	
	Движения.БронированиеТоваров.Записывать = Истина;
	Движения.БронированиеТоваров.Очистить();
	Движения.БронированиеТоваров.Записать();
	
	МетодРасчета = ОбщегоНазначенияСервер.ПолучитьУчетнуюПолитикуОрганизации(Дата);

	Если МетодРасчета = Перечисления.СпособСписания.ПоСредней Тогда

		Блокировка = Новый БлокировкаДанных;
		ЭлБлокировки = Блокировка.Добавить("РегистрНакопления.ОстаткиНоменклатуры");
		ЭлБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
		ЭлБлокировки.УстановитьЗначение("Склад", СкладОтправки);
		ЭлБлокировки.ИсточникДанных = СписокКниг;
		ЭлБлокировки.ИспользоватьИзИсточникаДанных("Книга", "Книга");
		
		Блокировка.Заблокировать();
		
		Движения.ОстаткиНоменклатуры.Записать();

		Запрос = Новый Запрос;
		Запрос.Текст =
		"ВЫБРАТЬ
		|	ПеремещениеКнигКниги.Книга КАК Книга,
		|	СУММА(ПеремещениеКнигКниги.Количество) КАК КолДок,
		|	ПеремещениеКнигКниги.Ссылка.СкладОтправки КАК Склад
		|ПОМЕСТИТЬ ТабДок
		|ИЗ
		|	Документ.ПеремещениеКниг.СписокКниг КАК ПеремещениеКнигКниги
		|ГДЕ
		|	ПеремещениеКнигКниги.Ссылка = &Ссылка
		|
		|СГРУППИРОВАТЬ ПО
		|	ПеремещениеКнигКниги.Книга,
		|	ПеремещениеКнигКниги.Ссылка.СкладОтправки
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Книга,
		|	Склад
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	БронированиеТоваровОстатки.Книга КАК Книга,
		|	БронированиеТоваровОстатки.КоличествоЗабронированногоОстаток КАК КоличествоЗабронированногоОстаток
		|ПОМЕСТИТЬ ВТ_Бронь
		|ИЗ
		|	РегистрНакопления.БронированиеТоваров.Остатки(
		|			&МоментВремени,
		|			Книга В
		|					(ВЫБРАТЬ
		|						ТабДок.Книга
		|					ИЗ
		|						ТабДок)
		|				И Склад В
		|					(ВЫБРАТЬ
		|						ТабДок.Склад
		|					ИЗ
		|						ТабДок)) КАК БронированиеТоваровОстатки
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ОстаткиНоменклатурыОстатки.Книга КАК Книга,
		|	ОстаткиНоменклатурыОстатки.КоличествоОстаток КАК КоличествоОстаток,
		|	ОстаткиНоменклатурыОстатки.СуммаОстаток КАК СуммаОстаток
		|ПОМЕСТИТЬ ВТ_Ост
		|ИЗ
		|	РегистрНакопления.ОстаткиНоменклатуры.Остатки(
		|			&МоментВремени,
		|			Книга В
		|					(ВЫБРАТЬ
		|						ТабДок.Книга
		|					ИЗ
		|						ТабДок)
		|				И Склад В
		|					(ВЫБРАТЬ
		|						ТабДок.Склад
		|					ИЗ
		|						ТабДок)) КАК ОстаткиНоменклатурыОстатки
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТабДок.Книга КАК Книга,
		|	ТабДок.КолДок КАК КолДок,
		|	ТабДок.Склад КАК Склад,
		|	ЕСТЬNULL(ВТ_Ост.КоличествоОстаток, 0) КАК КолОст,
		|	ЕСТЬNULL(ВТ_Ост.СуммаОстаток, 0) КАК СуммаОст,
		|	ЕСТЬNULL(ВТ_Бронь.КоличествоЗабронированногоОстаток, 0) КАК БроньОст
		|ИЗ
		|	ТабДок КАК ТабДок
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Бронь КАК ВТ_Бронь
		|		ПО ТабДок.Книга = ВТ_Бронь.Книга
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Ост КАК ВТ_Ост
		|		ПО ТабДок.Книга = ВТ_Ост.Книга";

		Запрос.УстановитьПараметр("МоментВремени", МоментВремени());
		Запрос.УстановитьПараметр("Ссылка", Ссылка);

		РезультатЗапроса = Запрос.Выполнить();

		ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();

		Движения.ОстаткиНоменклатуры.Записывать = Истина;

		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			
// регистр ОстаткиНоменклатуры Приход
			Движения.ОстаткиНоменклатуры.Записывать = Истина;
			ДвижениеПриход = Движения.ОстаткиНоменклатуры.Добавить();
			ДвижениеПриход.ВидДвижения = ВидДвиженияНакопления.Приход;
			
			ДвижениеПриход.Период = Дата;
			ДвижениеПриход.Книга = ВыборкаДетальныеЗаписи.Книга;
			ДвижениеПриход.Склад = СкладПриема;
			ДвижениеПриход.Количество = ВыборкаДетальныеЗаписи.КолДок;
			
// регистр ОстаткиНоменклатуры Расход
			Движения.ОстаткиНоменклатуры.Записывать = Истина;
			ДвижениеРасход = Движения.ОстаткиНоменклатуры.Добавить();
			ДвижениеРасход.ВидДвижения = ВидДвиженияНакопления.Расход;
			
			ДвижениеРасход.Период = Дата;
			ДвижениеРасход.Книга = ВыборкаДетальныеЗаписи.Книга;
			ДвижениеРасход.Склад = ВыборкаДетальныеЗаписи.Склад;
			ДвижениеРасход.Количество = ВыборкаДетальныеЗаписи.КолДок;

			Если ВыборкаДетальныеЗаписи.КолДок > (ВыборкаДетальныеЗаписи.КолОст - ВыборкаДетальныеЗаписи.БроньОст) Тогда

				Дефицит = ВыборкаДетальныеЗаписи.КолДок
						   - ВыборкаДетальныеЗаписи.КолОст
						   - ВыборкаДетальныеЗаписи.БроньОст;

				Сообщение = Новый СообщениеПользователю;
				Сообщение.Текст = "Не хватает "
								  + Дефицит
								  + " шт. книг "
								  + ВыборкаДетальныеЗаписи.Книга
								  + " в Перемещение книг "
								  + Номер
								  + " от "
								  + Дата;
				Сообщение.Сообщить();
				НоменклатурыХватает = Ложь;

			ИначеЕсли ВыборкаДетальныеЗаписи.КолДок = ВыборкаДетальныеЗаписи.КолОст Тогда

				ДвижениеПриход.Сумма = ВыборкаДетальныеЗаписи.СуммаОст;
				ДвижениеРасход.Сумма = ВыборкаДетальныеЗаписи.СуммаОст;
				
			ИначеЕсли ВыборкаДетальныеЗаписи.КолДок < ВыборкаДетальныеЗаписи.КолОст Тогда

				ДвижениеПриход.Сумма = ВыборкаДетальныеЗаписи.КолДок
									   * ВыборкаДетальныеЗаписи.СуммаОст
									   / ВыборкаДетальныеЗаписи.КолОст;

				ДвижениеРасход.Сумма = ВыборкаДетальныеЗаписи.КолДок
									   * ВыборкаДетальныеЗаписи.СуммаОст
									   / ВыборкаДетальныеЗаписи.КолОст;

			КонецЕсли;
		КонецЦикла;
		
		Движения.БронированиеТоваров.Записывать = Истина;

	Иначе

		Блокировка = Новый БлокировкаДанных;
		ЭлБлокировки = Блокировка.Добавить("РегистрНакопления.ОстаткиНоменклатуры");
		ЭлБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
		ЭлБлокировки.УстановитьЗначение("Склад", СкладОтправки);
		ЭлБлокировки.ИсточникДанных = СписокКниг;
		ЭлБлокировки.ИспользоватьИзИсточникаДанных("Книга", "Книга");

		Блокировка.Заблокировать();

		Движения.ОстаткиНоменклатуры.Записать();

		Запрос = Новый Запрос;
		Запрос.Текст =
		"ВЫБРАТЬ
		|	ПродажаКнигКниги.Книга КАК Книга,
		|	СУММА(ПродажаКнигКниги.Количество) КАК КолДок,
		|	ПродажаКнигКниги.Ссылка.СкладОтправки КАК Склад
		|ПОМЕСТИТЬ ТабДок
		|ИЗ
		|	Документ.ПеремещениеКниг.СписокКниг КАК ПродажаКнигКниги
		|ГДЕ
		|	ПродажаКнигКниги.Ссылка = &Ссылка
		|
		|СГРУППИРОВАТЬ ПО
		|	ПродажаКнигКниги.Книга,
		|	ПродажаКнигКниги.Ссылка.СкладОтправки
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Книга,
		|	Склад
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ОстаткиНоменклатурыОстатки.Книга КАК Книга,
		|	ОстаткиНоменклатурыОстатки.Партия КАК Партия,
		|	ОстаткиНоменклатурыОстатки.КоличествоОстаток КАК КоличествоОстаток,
		|	ОстаткиНоменклатурыОстатки.СуммаОстаток КАК СуммаОстаток
		|ПОМЕСТИТЬ ВТ_Остатки
		|ИЗ
		|	РегистрНакопления.ОстаткиНоменклатуры.Остатки(
		|			&Момент,
		|			Книга В
		|					(ВЫБРАТЬ
		|						ТабДок.Книга
		|					ИЗ
		|						ТабДок)
		|				И Склад В
		|					(ВЫБРАТЬ
		|						ТабДок.Склад
		|					ИЗ
		|						ТабДок)) КАК ОстаткиНоменклатурыОстатки
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	БронированиеТоваровОстатки.Книга КАК Книга,
		|	БронированиеТоваровОстатки.КоличествоЗабронированногоОстаток КАК КоличествоЗабронированногоОстаток
		|ПОМЕСТИТЬ ВТ_Бронь
		|ИЗ
		|	РегистрНакопления.БронированиеТоваров.Остатки(
		|			&Момент,
		|			Книга В
		|					(ВЫБРАТЬ
		|						ТабДок.Книга
		|					ИЗ
		|						ТабДок)
		|				И Склад В
		|					(ВЫБРАТЬ
		|						ТабДок.Склад
		|					ИЗ
		|						ТабДок)) КАК БронированиеТоваровОстатки
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТабДок.Книга КАК Книга,
		|	ТабДок.КолДок КАК КолДок,
		|	ТабДок.Склад КАК Склад,
		|	ЕСТЬNULL(ВТ_Бронь.КоличествоЗабронированногоОстаток, 0) КАК БроньОст,
		|	ЕСТЬNULL(ВТ_Остатки.КоличествоОстаток, 0) КАК КолОст,
		|	ЕСТЬNULL(ВТ_Остатки.СуммаОстаток, 0) КАК СуммаОст,
		|	ВТ_Остатки.Партия КАК Партия,
		|	ПродажаКниг.Дата КАК ПартияДата
		|ИЗ
		|	ТабДок КАК ТабДок
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Остатки КАК ВТ_Остатки
		|			ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПродажаКниг КАК ПродажаКниг
		|			ПО ВТ_Остатки.Партия = ПродажаКниг.Ссылка
		|		ПО ТабДок.Книга = ВТ_Остатки.Книга
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Бронь КАК ВТ_Бронь
		|		ПО ТабДок.Книга = ВТ_Бронь.Книга
		|
		|УПОРЯДОЧИТЬ ПО
		|	Книга
		|ИТОГИ
		|	МАКСИМУМ(КолДок),
		|	МАКСИМУМ(БроньОст),
		|	СУММА(КолОст),
		|	СУММА(СуммаОст)
		|ПО
		|	Книга";

		Запрос.УстановитьПараметр("Момент", МоментВремени());
		Запрос.УстановитьПараметр("Ссылка", Ссылка);
		
		Если МетодРасчета = Перечисления.СпособСписания.FIFO Тогда

			Запрос.Текст = СтрЗаменить(Запрос.Текст, "УБЫВ", "Возр");
		КонецЕсли;

		РезультатЗапроса = Запрос.Выполнить();

		ВыборкаНоменклатура = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);

		Движения.ОстаткиНоменклатуры.Записывать = Истина;

		Пока ВыборкаНоменклатура.Следующий() Цикл

			Если ВыборкаНоменклатура.КолДок > (ВыборкаНоменклатура.КолОст - ВыборкаНоменклатура.БроньОст) Тогда

				Дефицит = ВыборкаНоменклатура.КолДок - ВыборкаНоменклатура.КолОст - ВыборкаНоменклатура.БроньОст;

				Сообщение = Новый СообщениеПользователю;
				Сообщение.Текст = "Не хватает "
								  + Дефицит
								  + " шт. книг "
								  + ВыборкаНоменклатура.Книга
								  + " в Перемещение книг "
								  + Номер
								  + " от "
								  + Дата;
				Сообщение.Сообщить();
				НоменклатурыХватает = Ложь;
				Продолжить;

			КонецЕсли;

			ВыборкаДетальныеЗаписи = ВыборкаНоменклатура.Выбрать();

			КоличествоНадоСписать  = ВыборкаНоменклатура.КолДок;

			Пока ВыборкаДетальныеЗаписи.Следующий() И КоличествоНадоСписать <> 0 Цикл
				
				// регистр ОстаткиНоменклатуры Приход 
				ДвижениеПриход = Движения.ОстаткиНоменклатуры.Добавить();
				ДвижениеПриход.ВидДвижения = ВидДвиженияНакопления.Приход;
				
				// регистр ОстаткиНоменклатуры Расход
				ДвижениеРасход = Движения.ОстаткиНоменклатуры.Добавить();
				ДвижениеРасход.ВидДвижения = ВидДвиженияНакопления.Расход;
				ДвижениеПриход.Период = Дата;

				ДвижениеПриход.Книга = ВыборкаДетальныеЗаписи.Книга;
				ДвижениеПриход.Склад = СкладПриема;
				ДвижениеРасход.Период = Дата;

				ДвижениеРасход.Книга = ВыборкаДетальныеЗаписи.Книга;
				ДвижениеРасход.Склад = ВыборкаДетальныеЗаписи.Склад;

				Если КоличествоНадоСписать >= ВыборкаДетальныеЗаписи.КолОст Тогда

					ДвижениеПриход.Сумма = ВыборкаДетальныеЗаписи.СуммаОст;
					ДвижениеПриход.Количество = ВыборкаДетальныеЗаписи.КолОст;
					ДвижениеПриход.Партия = ВыборкаДетальныеЗаписи.Партия;

					ДвижениеРасход.Сумма = ВыборкаДетальныеЗаписи.СуммаОст;
					ДвижениеРасход.Количество = ВыборкаДетальныеЗаписи.КолОст;
					ДвижениеРасход.Партия = ВыборкаДетальныеЗаписи.Партия;

					КоличествоНадоСписать = КоличествоНадоСписать - ВыборкаДетальныеЗаписи.КолОст;

				ИначеЕсли КоличествоНадоСписать < ВыборкаДетальныеЗаписи.КолОст Тогда

					ДвижениеПриход.Сумма = КоличествоНадоСписать
										   * ВыборкаДетальныеЗаписи.СуммаОст
										   / ВыборкаДетальныеЗаписи.КолОст;
					ДвижениеПриход.Количество = КоличествоНадоСписать;
					ДвижениеПриход.Партия = ВыборкаДетальныеЗаписи.Партия;
					ДвижениеРасход.Сумма = КоличествоНадоСписать
										   * ВыборкаДетальныеЗаписи.СуммаОст
										   / ВыборкаДетальныеЗаписи.КолОст;
					ДвижениеРасход.Количество = КоличествоНадоСписать;
					ДвижениеРасход.Партия = ВыборкаДетальныеЗаписи.Партия;
				КонецЕсли;

			КонецЦикла;
		КонецЦикла;

		Движения.БронированиеТоваров.Записывать = Истина;
	КонецЕсли;

	Если Не НоменклатурыХватает Тогда
	
		Отказ = Истина;	
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли
