
Процедура ОбработкаПроведения(Отказ, Режим)

	// регистр НаличиеКнигНаСкладах Приход
	Движения.НаличиеКнигНаСкладах.Записывать = Истина;
	Для Каждого ТекСтрокаСписокПеремещаемыхКниг Из СписокПеремещаемыхКниг Цикл
		Движение = Движения.НаличиеКнигНаСкладах.Добавить();
		Движение.ВидДвижения = ВидДвиженияНакопления.Приход;
		Движение.Период = Дата;
		Движение.Склад = СкладПриема;
		Движение.Книга = ТекСтрокаСписокПеремещаемыхКниг.Книга;
		Движение.Количество = ТекСтрокаСписокПеремещаемыхКниг.Количество;
	КонецЦикла;

	// регистр НаличиеКнигНаСкладах Расход
	Движения.НаличиеКнигНаСкладах.Записывать = Истина;
	Для Каждого ТекСтрокаСписокПеремещаемыхКниг Из СписокПеремещаемыхКниг Цикл
		Движение = Движения.НаличиеКнигНаСкладах.Добавить();
		Движение.ВидДвижения = ВидДвиженияНакопления.Расход;
		Движение.Период = Дата;
		Движение.Склад = СкладОтправки;
		Движение.Книга = ТекСтрокаСписокПеремещаемыхКниг.Книга;
		Движение.Количество = ТекСтрокаСписокПеремещаемыхКниг.Количество;
	КонецЦикла;

КонецПроцедуры
// @strict-types


#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОписаниеПеременных

#КонецОбласти

#Область ПрограммныйИнтерфейс

// Код процедур и функций

#КонецОбласти

#Область ОбработчикиСобытий

// Код процедур и функций

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

// Код процедур и функций

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Код процедур и функций

#КонецОбласти

#Область Инициализация

#КонецОбласти

#КонецЕсли
