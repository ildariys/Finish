// @strict-types


#Область ПрограммныйИнтерфейс

// Код процедур и функций

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

// Код процедур и функций

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Получить значение наценки.
// 
// Возвращаемое значение:
//  Произвольный, Число - Получить значение наценки
Функция ПолучитьЗначениеНаценки() Экспорт
	
	Возврат Константы.НаценкаВПроцентах.Получить();
	
КонецФункции

Функция ПолучитьЗначениеТекущегоМагазина(СсылкаСотрудника)Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	Сотрудники.Магазин КАК Магазин
		|ИЗ
		|	Справочник.Сотрудники КАК Сотрудники
		|ГДЕ
		|	Сотрудники.Ссылка = &Ссылка";
	
	Запрос.УстановитьПараметр("Ссылка", СсылкаСотрудника);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Если ВыборкаДетальныеЗаписи.Следующий() Тогда
		Возврат ВыборкаДетальныеЗаписи.Магазин;
	Иначе
		Возврат Неопределено;
	КонецЕсли;
	
КонецФункции

Функция ПолучениеТекущегоКурсаВалюты(ТекущаяВалюта)Экспорт
	
	Результат = Новый Структура;
		
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	КурсыВалютСрезПоследних.Курс,
	|	КурсыВалютСрезПоследних.Кратность
	|ИЗ
	|	РегистрСведений.КурсыВалют.СрезПоследних(, Валюта = &Валюта) КАК КурсыВалютСрезПоследних";

	Запрос.УстановитьПараметр("Валюта", ТекущаяВалюта);

	РезультатЗапроса = Запрос.Выполнить();

	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();

	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		
		Результат.Вставить("Курс", ВыборкаДетальныеЗаписи.Курс);
		Результат.Вставить("Кратность", ВыборкаДетальныеЗаписи.Кратность); 
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции

Функция КоличествоПользователейСистемы()Экспорт

	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Пользователи.Ссылка КАК Ссылка
		|ИЗ
		|	Справочник.Пользователи КАК Пользователи
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Сотрудники КАК Сотрудники
		|		ПО Пользователи.Сотрудник = Сотрудники.Ссылка";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Возврат ВыборкаДетальныеЗаписи.Ссылка;
	КонецЦикла;
	
	Возврат Неопределено;


КонецФункции // КоличествоПользователейСистемы()

Функция СуммаДокументаПоступления(ДокументСсылка)Экспорт
	
	Результат = Неопределено;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ПоступлениеКниг.Сумма КАК Сумма
		|ИЗ
		|	Документ.ПоступлениеКниг КАК ПоступлениеКниг
		|ГДЕ
		|	ПоступлениеКниг.Ссылка = &Ссылка";
	
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Результат = ВыборкаДетальныеЗаписи.Сумма;
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции

Функция ПолучитьОстатокСредстМагазина(Дата, Магазин)Экспорт
	
	Результат = 0;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ДенежныеСредстваСетиОстатки.ДенежныеСредстваОстаток КАК ДенежныеСредстваОстаток
		|ИЗ
		|	РегистрНакопления.ДенежныеСредстваСети.Остатки(&Период, Магазин = &Магазин) КАК ДенежныеСредстваСетиОстатки";
	
	Запрос.УстановитьПараметр("Магазин", Магазин);
	Запрос.УстановитьПараметр("Период", Дата);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Результат = ВыборкаДетальныеЗаписи.ДенежныеСредстваОстаток;
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции

Функция ПолучитьУчетнуюПолитикуОрганизации(Дата) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	УчетнаяПолитикаСрезПоследних.МетодРасчета КАК МетодРасчета
		|ИЗ
		|	РегистрСведений.УчетнаяПолитика.СрезПоследних(&Дата) КАК УчетнаяПолитикаСрезПоследних";
	
	Запрос.УстановитьПараметр("Дата", Дата);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если НЕ РезультатЗапроса.Пустой() Тогда
		
		Выборка = РезультатЗапроса.Выбрать();
		
		Выборка.Следующий();
		
		МетодРасчета = Выборка.МетодРасчета;

	Иначе
		
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Не установлена учетная политика";
		Сообщение.Сообщить();
		
		МетодРасчета = Неопределено;
		
	КонецЕсли;   
	
	Возврат МетодРасчета;

КонецФункции

#КонецОбласти
