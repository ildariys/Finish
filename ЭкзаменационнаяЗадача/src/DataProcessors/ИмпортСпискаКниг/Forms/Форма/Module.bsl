#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)

	Объект.ФорматФайла = "CSV";

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ПутьКФайлуНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)

	ЧтоДелатьПослеВыбора 		= Новый ОписаниеОповещения("ПослеВыбораФайла", ЭтотОбъект);

	Проводник 					= Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);

	Если Объект.ФорматФайла = "CSV" Тогда

		Фильтр = "CSV-файл (*.csv)|*.csv";
	ИначеЕсли Объект.ФорматФайла = "Excel" Тогда

		Фильтр = "Excel-файл (*.xls;*.xlsx)|*.xls;*.xlsx";
	КонецЕсли;

	Проводник.Фильтр = Фильтр;
	Проводник.Показать(ЧтоДелатьПослеВыбора);

КонецПроцедуры
#КонецОбласти

#Область ОбработчикиКомандФормы
&НаКлиенте
Процедура Прочитать(Команда)

	Если Объект.ФорматФайла = "CSV" Тогда

		ПрочитатьФайл_CSV();
	ИначеЕсли Объект.ФорматФайла = "Excel" Тогда

		ПрочитатьФайл_XLS();
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура СопоставитьДанные(Команда)

	СопоставитьДанныеНаСервере();

КонецПроцедуры

&НаКлиенте
Процедура ЗаписатьДанные(Команда)

	ЗаписатьДанныеНаСервере();
	Сообщить("Данные записаны");

КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ПослеВыбораФайла(ВыбранныеФайлы, ДополнительныеПараметры) Экспорт

	Если ВыбранныеФайлы = Неопределено Тогда

		Возврат;
	КонецЕсли;

	Объект.ПутьКФайлу = ВыбранныеФайлы[0];

КонецПроцедуры

&НаКлиенте
Процедура ПрочитатьФайл_CSV()

	Объект.ДанныеФайла.Очистить();
	Текст = Новый ЧтениеТекста;
	Текст.Открыть(Объект.ПутьКФайлу, КодировкаТекста.UTF8);

	ТекСтрока = Текст.ПрочитатьСтроку();

	НомерСтроки = 1;

	Пока ТекСтрока <> Неопределено Цикл

		Если НомерСтроки = 1 Тогда

			НомерСтроки 	= НомерСтроки + 1;
			ТекСтрока 		= Текст.ПрочитатьСтроку();
			Продолжить;
		КонецЕсли;

		ЧастиСтроки = СтрРазделить(ТекСтрока, ";");

		Если ЧастиСтроки.Количество() < 3 Тогда

			Сообщение 			= Новый СообщениеПользователю;
			Сообщение.Текст 	= "В строке № " + НомерСтроки + " неверный формат";
			Сообщение.Сообщить();
			Продолжить;
		КонецЕсли;

		НоваяСтрока 				= Объект.ДанныеФайла.Добавить();
		НоваяСтрока.Название 		= ЧастиСтроки[1];
		НоваяСтрока.Авторы 			= ЧастиСтроки[2];
		НоваяСтрока.Описание 		= ЧастиСтроки[3];
		НоваяСтрока.КодISBN 		= ЧастиСтроки[4];
		НоваяСтрока.Жанр 			= ЧастиСтроки[5];
		НоваяСтрока.Издательство 	= ЧастиСтроки[6];
		НоваяСтрока.ГодВыпуска 		= ЧастиСтроки[7];
		ТекСтрока 					= Текст.ПрочитатьСтроку();
		НомерСтроки 				= НомерСтроки + 1;
	КонецЦикла;

КонецПроцедуры

&НаКлиенте
Процедура ПрочитатьФайл_XLS()

	Файл 		= Новый Файл(Объект.ПутьКФайлу);
	Расширение 	= Файл.Расширение;
	
	//получить двоичные данные файла
	ДанныеФайла = Новый ДвоичныеДанные(Объект.ПутьКФайлу);
	
	//поместить данные файла во врем. хранилище
	АдресДанных = ПоместитьВоВременноеХранилище(ДанныеФайла);
	
	//обработать файл на сервере
	ПрочитатьФайл_XLS_НаСервере(АдресДанных, Расширение);

КонецПроцедуры

&НаСервере
Процедура ПрочитатьФайл_XLS_НаСервере(АдресДанных, Расширение)
	
	//сформировать имя временного файла
	ПутьКФайлуНаСервере = ПолучитьИмяВременногоФайла(Расширение);
	
	//получить данные файла из врем. хранилища
	ДанныеФайла = ПолучитьИзВременногоХранилища(АдресДанных);
	
	//записать данные файла в файловую систему сервера
	ДанныеФайла.Записать(ПутьКФайлуНаСервере);

	Объект.ДанныеФайла.Очистить();

	ТабДок = Новый ТабличныйДокумент;
	ТабДок.Прочитать(ПутьКФайлуНаСервере, СпособЧтенияЗначенийТабличногоДокумента.Значение);

	КоличествоСтрок = ТабДок.ВысотаТаблицы;

	Для НомерСтроки = 2 По КоличествоСтрок Цикл

		НоваяСтрока 				= Объект.ДанныеФайла.Добавить();
		НоваяСтрока.Название 		= ТабДок.Область(НомерСтроки, 2).Текст;
		НоваяСтрока.Авторы 			= ТабДок.Область(НомерСтроки, 3).Текст;
		НоваяСтрока.Описание 		= ТабДок.Область(НомерСтроки, 4).Текст;
		НоваяСтрока.КодISBN 		= ТабДок.Область(НомерСтроки, 5).Текст;
		НоваяСтрока.Жанр 			= ТабДок.Область(НомерСтроки, 6).Текст;
		НоваяСтрока.Издательство 	= ТабДок.Область(НомерСтроки, 7).Текст;
		НоваяСтрока.ГодВыпуска 		= ТабДок.Область(НомерСтроки, 8).Текст;
	КонецЦикла;

	УдалитьФайлы(ПутьКФайлуНаСервере);

КонецПроцедуры

&НаСервере
Процедура СопоставитьДанныеНаСервере()

	Запрос = Новый Запрос;

	Запрос.Текст =
	"ВЫБРАТЬ
	|	ДанныеФайла.НомерСтроки КАК НомерСтроки,
	|	ДанныеФайла.КодISBN КАК КодISBN
	|ПОМЕСТИТЬ ВТ_ДанныеФайла
	|ИЗ
	|	&ДанныеФайла КАК ДанныеФайла
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЕСТЬNULL(Книги.Ссылка, ЗНАЧЕНИЕ(Справочник.Книги.ПустаяСсылка)) КАК Ссылка,
	|	ВТ_ДанныеФайла.НомерСтроки
	|ИЗ
	|	ВТ_ДанныеФайла КАК ВТ_ДанныеФайла
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Книги КАК Книги
	|		ПО ВТ_ДанныеФайла.КодISBN = Книги.КодISBN";

	Запрос.УстановитьПараметр("ДанныеФайла", Объект.ДанныеФайла.Выгрузить());

	РезультатЗапроса = Запрос.Выполнить();

	Выборка = РезультатЗапроса.Выбрать();

	Пока Выборка.Следующий() Цикл

		СтруктураПоиска = Новый Структура("НомерСтроки", Выборка.НомерСтроки);
		НайденныеСтроки = Объект.ДанныеФайла.НайтиСтроки(СтруктураПоиска);

		СтрокаТЧ = НайденныеСтроки[0];
		СтрокаТЧ.ИмеющаясяКнига = Выборка.Ссылка;

	КонецЦикла;

КонецПроцедуры

&НаСервере
Процедура ЗаписатьДанныеНаСервере()

	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ДанныеФайла.Описание КАК Описание,
	|	ДанныеФайла.КодISBN КАК КодISBN,
	|	ДанныеФайла.Жанр КАК Жанр,
	|	ДанныеФайла.Издательство КАК Издательство,
	|	ДанныеФайла.ГодВыпуска КАК ГодВыпуска,
	|	ДанныеФайла.Авторы Как Авторы,
	|	ДанныеФайла.Название Как Название
	|ПОМЕСТИТЬ ВТ_ДанныеФайла
	|ИЗ
	|	&ДанныеФайла КАК ДанныеФайла
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЕСТЬNULL(АвторыСправочник.Ссылка, ЗНАЧЕНИЕ(Справочник.Авторы.ПустаяСсылка)) КАК АвторыСсылка,
	|	ВТ_ДанныеФайла.Авторы КАК Авторы,
	|	ЕСТЬNULL(ЖанрыСправочник.Ссылка, ЗНАЧЕНИЕ(Справочник.Жанры.ПустаяСсылка)) КАК ЖанрыСсылка,
	|	ВТ_ДанныеФайла.Жанр КАК Жанры,
	|	ЕСТЬNULL(ИздательствоСправчоник.Ссылка, ЗНАЧЕНИЕ(Справочник.Издательство.ПустаяСсылка)) КАК ИздательствоСсылка,
	|	ВТ_ДанныеФайла.Издательство КАК Издательство,
	|	ЕСТЬNULL(Книги.Ссылка, ЗНАЧЕНИЕ(Справочник.Книги.ПустаяСсылка)) КАК КнигаСсылка,
	|	ВТ_ДанныеФайла.КодISBN КАК КодISBN,
	|	ВТ_ДанныеФайла.Описание КАК Описание,
	|	ВТ_ДанныеФайла.Название КАК Название,
	|	Книги.Наименование КАК Наименование,
	|	ВТ_ДанныеФайла.ГодВыпуска
	|ИЗ
	|	ВТ_ДанныеФайла КАК ВТ_ДанныеФайла
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Книги КАК Книги
	|		ПО ВТ_ДанныеФайла.КодISBN = Книги.КодISBN
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Авторы КАК АвторыСправочник
	|		ПО АвторыСправочник.Наименование = ВТ_ДанныеФайла.Авторы
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Издательство КАК ИздательствоСправчоник
	|		ПО ВТ_ДанныеФайла.Издательство = ИздательствоСправчоник.Наименование
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Жанры КАК ЖанрыСправочник
	|		ПО ЖанрыСправочник.Наименование = ВТ_ДанныеФайла.Жанр";

	Запрос.УстановитьПараметр("ДанныеФайла", Объект.ДанныеФайла.Выгрузить());

	РезультатЗапроса = Запрос.Выполнить();

	Выборка = РезультатЗапроса.Выбрать();

	СоответствиеРеквизитов = Новый Соответствие;

	Пока Выборка.Следующий() Цикл

		СтруктураКниги = Новый Структура;
		//Проверка есть ли книга
		Если ЗначениеЗаполнено(Выборка.КнигаСсылка) Тогда

			СтруктураКниги.Вставить("Ссылка", Выборка.КнигаСсылка);
		Иначе

			СтруктураКниги.Вставить("Ссылка", Справочники.Книги.ПустаяСсылка());
		КонецЕсли;
		
		//Проверка есть ли автор
		Если ЗначениеЗаполнено(Выборка.АвторыСсылка) Тогда

			СтруктураКниги.Вставить("АвторыСсылка", Выборка.АвторыСсылка);
		Иначе

			АвторыСсылка = СоответствиеРеквизитов.Получить(Выборка.Авторы);
			Если АвторыСсылка = Неопределено Тогда

				АвторыСсылка = Справочники.Авторы.СозданиеНовогоАвтора(Выборка.Авторы);
				СоответствиеРеквизитов.Вставить(Выборка.Авторы, АвторыСсылка);
			КонецЕсли;

			СтруктураКниги.Вставить("АвторыСсылка", АвторыСсылка);

		КонецЕсли;
		
		//Проверка есть ли жанр
		Если ЗначениеЗаполнено(Выборка.ЖанрыСсылка) Тогда

			СтруктураКниги.Вставить("ЖанрыСсылка", Выборка.ЖанрыСсылка);
		Иначе

			ЖанрыСсылка = СоответствиеРеквизитов.Получить(Выборка.Жанры);
			Если ЖанрыСсылка = Неопределено Тогда

				ЖанрыСсылка = Справочники.Жанры.СозданиеНовогоЖанра(Выборка.Жанры);
				СоответствиеРеквизитов.Вставить(Выборка.Жанры, ЖанрыСсылка);
			КонецЕсли;

			СтруктураКниги.Вставить("ЖанрыСсылка", ЖанрыСсылка);
		КонецЕсли;
		//Проверка есть ли издательство
		Если ЗначениеЗаполнено(Выборка.ИздательствоСсылка) Тогда

			СтруктураКниги.Вставить("ИздательствоСсылка", Выборка.ИздательствоСсылка);
		Иначе

			ИздательствоСсылка = СоответствиеРеквизитов.Получить(Выборка.Издательство);
			Если ИздательствоСсылка = Неопределено Тогда

				ИздательствоСсылка = Справочники.Издательство.СозданиеНовогоИздательства(Выборка.Издательство);
				СоответствиеРеквизитов.Вставить(Выборка.Издательство, ИздательствоСсылка);
			КонецЕсли;

			СтруктураКниги.Вставить("ИздательствоСсылка", ИздательствоСсылка);
		КонецЕсли;

		СтруктураКниги.Вставить("КодISBN", Выборка.КодISBN);
		СтруктураКниги.Вставить("ГодВыпуска", Выборка.ГодВыпуска);
		СтруктураКниги.Вставить("Наименование", Выборка.Название);
		СтруктураКниги.Вставить("Описание", Выборка.Описание);

		Если ЗначениеЗаполнено(СтруктураКниги.Ссылка) Тогда

			Справочники.Книги.РедактированиеКниги(СтруктураКниги);
		Иначе

			Справочники.Книги.СозданиеНовойКниги(СтруктураКниги);
		КонецЕсли;

		ФорматированныйДокумент.Удалить();
	КонецЦикла;

КонецПроцедуры

#КонецОбласти